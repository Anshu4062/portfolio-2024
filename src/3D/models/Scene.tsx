/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
    nodes: {
        Cylinder019: THREE.Mesh;
        ShopBanner: THREE.Mesh;
        ShopDecoration: THREE.Mesh;
        ShopBody: THREE.Mesh;
        Fan3: THREE.Mesh;
        Fan2: THREE.Mesh;
        Fan1: THREE.Mesh;
        PowerStuff: THREE.Mesh;
        DecoLight: THREE.Mesh;
        BarrelWhite: THREE.Mesh;
        BarrelYellow: THREE.Mesh;
        ShopOutDecoration: THREE.Mesh;
        Circle1: THREE.Mesh;
        Circle2: THREE.Mesh;
        Circle3: THREE.Mesh;
        Circle4: THREE.Mesh;
        ShopBannerText: THREE.Mesh;
        WelcomeScreen: THREE.Mesh;
        MenuScreen: THREE.Mesh;
        MonitorScreen1: THREE.Mesh;
        MonitorScreen2: THREE.Mesh;
        MonitorScreen3: THREE.Mesh;
        VendingScreen: THREE.Mesh;
    };
};

export default function Scene(props: JSX.IntrinsicElements["group"]) {
    const { nodes } = useGLTF("/models/scene.glb") as unknown as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                geometry={nodes.Cylinder019.geometry}
                material={nodes.Cylinder019.material}
                position={[0.02, 2.461, -0.149]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.ShopBanner.geometry}
                material={nodes.ShopBanner.material}
                position={[-0.982, 3.17, 0]}
                rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.ShopDecoration.geometry}
                material={nodes.ShopDecoration.material}
                position={[-0.389, 1.051, -0.028]}
            />
            <mesh
                geometry={nodes.ShopBody.geometry}
                material={nodes.ShopBody.material}
                position={[-0.56, 1.982, -0.351]}
            />
            <mesh
                geometry={nodes.Fan3.geometry}
                material={nodes.Fan3.material}
                position={[-2.011, 2.524, 1.19]}
            />
            <mesh
                geometry={nodes.Fan2.geometry}
                material={nodes.Fan2.material}
                position={[-2.011, 2.537, -0.018]}
            />
            <mesh
                geometry={nodes.Fan1.geometry}
                material={nodes.Fan1.material}
                position={[-2.011, 2.524, -1.305]}
            />
            <mesh
                geometry={nodes.PowerStuff.geometry}
                material={nodes.PowerStuff.material}
                position={[-1.515, 2.104, 0.702]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.DecoLight.geometry}
                material={nodes.DecoLight.material}
                position={[0.187, 1.676, -0.031]}
            />
            <mesh
                geometry={nodes.BarrelWhite.geometry}
                material={nodes.BarrelWhite.material}
                position={[1.164, 0.51, 1.642]}
            />
            <mesh
                geometry={nodes.BarrelYellow.geometry}
                material={nodes.BarrelYellow.material}
                position={[1.039, 0.378, -2.078]}
            />
            <mesh
                geometry={nodes.ShopOutDecoration.geometry}
                material={nodes.ShopOutDecoration.material}
                position={[-1.52, 1.463, -0.295]}
            />
            <mesh
                geometry={nodes.Circle1.geometry}
                material={nodes.Circle1.material}
                position={[-0.243, 2.032, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle2.geometry}
                material={nodes.Circle2.material}
                position={[-0.243, 1.762, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle3.geometry}
                material={nodes.Circle3.material}
                position={[-0.243, 1.486, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle4.geometry}
                material={nodes.Circle4.material}
                position={[-0.243, 1.202, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.ShopBannerText.geometry}
                material={nodes.ShopBannerText.material}
                position={[-0.97, 3.151, -0.004]}
                rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.WelcomeScreen.geometry}
                material={nodes.WelcomeScreen.material}
                position={[1.973, 0.933, 2.23]}
                rotation={[0, -0.919, 0]}
            />
            <mesh
                geometry={nodes.MenuScreen.geometry}
                material={nodes.MenuScreen.material}
                position={[-0.247, 1.621, -2.354]}
                rotation={[0, -Math.PI / 2, 0]}
            />
            <mesh
                geometry={nodes.MonitorScreen1.geometry}
                material={nodes.MonitorScreen1.material}
                position={[-1.469, 4.279, 1.021]}
                rotation={[0, -1.144, Math.PI / 2]}
            />
            <mesh
                geometry={nodes.MonitorScreen2.geometry}
                material={nodes.MonitorScreen2.material}
                position={[-1.469, 4.045, -0.099]}
                rotation={[0, -1.532, Math.PI / 2]}
            />
            <mesh
                geometry={nodes.MonitorScreen3.geometry}
                material={nodes.MonitorScreen3.material}
                position={[-1.523, 4.279, -1.262]}
                rotation={[-Math.PI, -1.266, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.VendingScreen.geometry}
                material={nodes.VendingScreen.material}
                position={[-2.23, 1.065, 1.209]}
                rotation={[-Math.PI, 0, -Math.PI]}
            />
        </group>
    );
}

useGLTF.preload("/scene.glb");
