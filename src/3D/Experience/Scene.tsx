/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { Sparkles } from "@react-three/drei";
import Fan from "../Objects/Fan";
import PowerBank from "../Objects/PowerBank";
import ScreenWelcome from "../Objects/ScreenWelcome";
import ScreenMenu from "../Objects/ScreenMenu";
import ScreenVending from "../Objects/ScreenVending";
import { getAsset } from "../Stores/useLoaderStore";
import { GLTF } from "three/examples/jsm/Addons.js";
import { useMemo } from "react";
import ImageBoard from "../Objects/ImageBoard";
import ScreenAbout from "../Objects/ScreenAbout";
import BannerText from "../Objects/BannerText";

type GLTFResult = GLTF & {
    nodes: {
        Cylinder019: THREE.Mesh;
        ShopBanner: THREE.Mesh;
        ShopDecoration: THREE.Mesh;
        ShopBody: THREE.Mesh;
        Fan3: THREE.Mesh;
        Fan2: THREE.Mesh;
        Fan1: THREE.Mesh;
        PowerStuff: THREE.Mesh;
        PowerBank: THREE.Mesh;
        DecoLight: THREE.Mesh;
        BarrelWhite: THREE.Mesh;
        BarrelYellow: THREE.Mesh;
        ShopOutDecoration: THREE.Mesh;
        Circle1: THREE.Mesh;
        Circle2: THREE.Mesh;
        Circle3: THREE.Mesh;
        Circle4: THREE.Mesh;
        ShopBannerText: THREE.Mesh;
        WelcomeScreen: THREE.Mesh;
        MenuScreen: THREE.Mesh;
        MonitorScreen1: THREE.Mesh;
        MonitorScreen2: THREE.Mesh;
        MonitorScreen3: THREE.Mesh;
        VendingScreen: THREE.Mesh;
    };
};

interface Props {
    material: THREE.Material;
}

// Material for the circles next to the menu
const menuCircleMaterial = new THREE.MeshBasicMaterial({
    color: 0xf09af1,
});

export default function Scene({ material }: Props) {
    // Load the scene and extract the nodes
    const sceneModel = getAsset("sceneModel") as GLTF;
    const nodes = useMemo(() => {
        const nodes = {} as GLTFResult["nodes"];
        sceneModel.scene.traverse((child) => {
            if (child instanceof THREE.Mesh) {
                nodes[child.name as keyof GLTFResult["nodes"]] = child;
            }
        });

        return nodes;
    }, [sceneModel]);

    return (
        <group dispose={null}>
            {/* Add the 3 fans */}
            <Fan
                geometry={nodes.Fan1.geometry}
                material={material}
                position={[-2.011, 2.524, 1.19]}
            />
            <Fan
                geometry={nodes.Fan1.geometry}
                material={material}
                position={[-2.011, 2.537, -0.018]}
            />
            <Fan
                geometry={nodes.Fan1.geometry}
                material={material}
                position={[-2.011, 2.524, -1.305]}
            />
            {/* Add the power bank, to turn off lights */}
            <PowerBank
                geometry={nodes.PowerBank.geometry}
                material={material}
                position={[-1.515, 2.104, 0.702]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            {/* Screens */}
            <ScreenWelcome
                geometry={nodes.WelcomeScreen.geometry}
                position={[1.973, 0.933, 2.23]}
                rotation={[0, -0.919, 0]}
            />
            <ScreenMenu
                geometry={nodes.MenuScreen.geometry}
                position={[-0.247, 1.621, -2.354]}
                rotation={[0, -Math.PI / 2, 0]}
            />
            <ScreenVending
                geometry={nodes.VendingScreen.geometry}
                position={[-2.23, 1.065, 1.209]}
                rotation={[-Math.PI, 0, -Math.PI]}
            />
            <BannerText
                geometry={nodes.ShopBannerText.geometry}
                position={[-0.97, 3.151, -0.004]}
                rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            />
            <ImageBoard
                meshProps={{
                    geometry: nodes.MonitorScreen1.geometry,
                    position: [-1.469, 4.279, 1.021],
                    rotation: [0, -1.144, Math.PI / 2],
                }}
                image="tvGithub"
                link="https://github.com/Jxl-s"
            />
            <ScreenAbout
                geometry={nodes.MonitorScreen2.geometry}
                position={[-1.469, 4.045, -0.099]}
                rotation={[0, -1.532, Math.PI / 2]}
            />
            <ImageBoard
                meshProps={{
                    geometry: nodes.MonitorScreen3.geometry,
                    position: [-1.523, 4.279, -1.262],
                    rotation: [-Math.PI, -1.266, -Math.PI / 2],
                }}
                image="tvLinkedin"
                link="https://www.linkedin.com/in/li-jiaxuan"
            />
            <Sparkles
                count={100}
                color={"white"}
                scale={[8, 4, 8]}
                position-y={2.5}
                position-x={-0.5}
                opacity={0.5}
                size={1.5}
            />
            {/* 4 circles next to menu (TODO: make them do something later on) */}
            <mesh
                geometry={nodes.Circle1.geometry}
                material={menuCircleMaterial}
                position={[-0.243, 2.032, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle2.geometry}
                material={menuCircleMaterial}
                position={[-0.243, 1.762, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle3.geometry}
                material={menuCircleMaterial}
                position={[-0.243, 1.486, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.Circle4.geometry}
                material={menuCircleMaterial}
                position={[-0.243, 1.202, -2.865]}
                rotation={[0, 0, -Math.PI / 2]}
            />

            <mesh
                geometry={nodes.Cylinder019.geometry}
                material={material}
                position={[0.02, 2.461, -0.149]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.ShopBanner.geometry}
                material={material}
                position={[-0.982, 3.17, 0]}
                rotation={[Math.PI / 2, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.ShopDecoration.geometry}
                material={material}
                position={[-0.389, 1.051, -0.028]}
            />
            <mesh
                geometry={nodes.ShopBody.geometry}
                material={material}
                position={[-0.56, 1.982, -0.351]}
            />
            <mesh
                geometry={nodes.PowerStuff.geometry}
                material={material}
                position={[-1.515, 2.104, 0.702]}
                rotation={[0, 0, -Math.PI / 2]}
            />
            <mesh
                geometry={nodes.DecoLight.geometry}
                material={material}
                position={[0.187, 1.676, -0.031]}
            />
            <mesh
                geometry={nodes.BarrelWhite.geometry}
                material={material}
                position={[1.164, 0.51, 1.642]}
            />
            <mesh
                geometry={nodes.BarrelYellow.geometry}
                material={material}
                position={[1.039, 0.378, -2.078]}
            />
            <mesh
                geometry={nodes.ShopOutDecoration.geometry}
                material={material}
                position={[-1.52, 1.463, -0.295]}
            />
        </group>
    );
}
